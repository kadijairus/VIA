'**********************************************************************************
' Purpose:      Create csv file to batch import patient data to VIA program
' Input:        Patient data in Excel worksheet
'               Illumina Genome Studio .gtc files
' Output:       A .csv file with patient data combined with correct .gtc file paths
' Version:      v4 02.01.2025
' Changes:      Added checkbox to export only selected patients to VIA
' Author:       Kadi Jairus
'               kadi.jairus@kliinikum.ee
'*********************************************************************************

Sub CreateTxtFileFromGTC()
    ' Declare variables
    Dim CsvFileMapping As Object
    Dim SelectedFolder As String
    Dim FileSystem As Object
    Dim MainFolder As Object
    Dim FolderName As String
    Dim File As Object
    Dim FilePaths As Collection
    Dim FilePath As Variant
    Dim OutputFile As String
    Dim RowNum As Integer
    Dim TxtContent As String
    Dim SampleName As String
    Dim SampleType As String
    Dim ProcessingSetting As String
    Dim GDABeadChip As String
    Dim PatientName As String
    Dim PatientId As String
    Dim Age As String
    Dim Indication As String
    Dim Doctor As String
    Dim DateTaken As Date
    Dim i As Integer
    
    ' Variables for CSV parsing
    Dim CsvFile As String
    Dim CsvLine As String
    Dim CsvData As Variant
    Dim SampleID As String
    Dim Position As String
    Dim GtcDetails As Collection
    
    ' Initialize file system object and file paths collection
    Set FileSystem = CreateObject("Scripting.FileSystemObject")
    Set FilePaths = New Collection
    Set CsvFileMapping = CreateObject("Scripting.Dictionary")
    
    ' Ask user if they have checked sample types
    If MsgBox("Kas valisid imporditavad patsiendid tulbast J?" & vbCrLf & _
        "Kas kontrollisid näidustuste faili viimases tulbas VIA proovitüübid üle?", vbYesNo + vbQuestion, "Sample Types") = vbNo Then
        MsgBox "Ära usalda rumalat masinat. " & vbNewLine & "Palun kontrolli automaatselt määratud VIA proovitüübid üle!", vbExclamation
        Exit Sub
    End If

    ' Prompt user to select a directory
    MsgBox "Palun vali kaust, kus asub sellele näidustuste failile vastav Genome Studio projekt!", vbInformation
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Palun vali kaust, kus asub Genome Studio projekt"
        If .Show = -1 Then
            SelectedFolder = .SelectedItems(1)
        Else
            MsgBox "Oi-oi. Kaust jäi valmimata." & vbNewLine & "Ei saanud VIA faili teha.", vbExclamation
            Exit Sub
        End If
    End With
    
    ' Extract folder name from the selected folder path
    Dim FolderPathSplit As Variant
    FolderPathSplit = Split(SelectedFolder, "\")
    FolderName = FolderPathSplit(UBound(FolderPathSplit))
    
    ' Recursively scan for .gtc files
    Set MainFolder = FileSystem.GetFolder(SelectedFolder)
    Call GetGTCFiles(MainFolder, FilePaths)
    
    ' Find the CSV file in the selected folder
    CsvFile = ""
    For Each File In MainFolder.Files
        If File.Name Like "CytoChip*.csv" Then
            CsvFile = File.Path
            Exit For
        End If
    Next File
    
    If CsvFile = "" Then
        MsgBox "Oi-oi. Ei õnnestunud CytoChip csv faili leida." & vbNewLine & "Ei saanud VIA faili teha.", vbExclamation
        Exit Sub
    End If
    
    ' Read and parse the CSV file
    Open CsvFile For Input As #1
    Do While Not EOF(1)
        Line Input #1, CsvLine
        CsvData = Split(CsvLine, ",")
        
        ' Skip empty lines or lines with insufficient columns
        If UBound(CsvData) < 10 Then
            ' Skip the rest of the loop and go to the next line
            GoTo NextLine
        End If
        
        ' Line in original looks like this:
        'SampleID,cyto,,cyto,,A01,GtcFolder,Position,,,,,,,,,
        SampleID = CsvData(0)
        GtcFolder = CsvData(6)
        Position = CsvData(7)
        
        ' Debugging: Output SampleID, GtcFolder, and Position
        ' MsgBox "SampleID: " & SampleID & " GtcFolder: " & GtcFolder & " Position: " & Position
        
        ' Create a collection to store GtcFolder and Position
        If Not CsvFileMapping.Exists(SampleID) Then
            Set GtcDetails = New Collection
            GtcDetails.Add GtcFolder
            GtcDetails.Add Position
            
            ' Add to the dictionary
            CsvFileMapping.Add SampleID, GtcDetails
            
            ' Debugging: Check if data is added to the map
            'Set CheckDetails = CreateObject("Scripting.Dictionary")
            'Set CheckDetails = CsvFileMapping(SampleID)
            'Dim TestFolder As String
            'Dim TestPosition As String
            ' Retrieve values from the collection and debug
            'TestFolder = CsvFileMapping(SampleID)(1)  ' First item: GtcFolder
            'TestPosition = CsvFileMapping(SampleID)(2)  ' Second item: Position
            ' Debugging: Output TestFolder and TestPosition values
            'MsgBox SampleID & " TestFolder: " & TestFolder & " TestPosition: " & TestPosition
        End If
NextLine:             ' Label to continue to the next line
    Loop
    Close #1

    ' Prepare output text file path
    OutputFile = SelectedFolder & "\" & FolderName & "_Via.txt"

    ' Open text file for writing
    Open OutputFile For Output As #1

    ' Write the header to the text file
    Print #1, "Sample Name" & vbTab & "Filename" & vbTab & "Sample Type" & vbTab & "Processing Setting" & vbTab & "GDA BeadChip" & vbTab & "Patient Name" & vbTab & "Patient Id" & vbTab & "Age" & vbTab & "Indication" & vbTab & "Doctor" & vbTab & "Date Taken"

    ' Iterate through rows in the Excel sheet and write data to the text file
    Dim LastRow As Long
    Dim ExpectedFilePath As String
    Dim PathFound As Boolean
    ' Only include if "TRUE" in column "VIAsse"
    Dim BooleanValue As Boolean
    LastRow = ThisWorkbook.Sheets(1).Cells(ThisWorkbook.Sheets(1).Rows.Count, 1).End(xlUp).Row
    
    Dim GtcDetailsFromCollection As Collection
    
    For RowNum = 2 To LastRow
         ' Check the boolean value in column J (10th column)
        BooleanValue = ThisWorkbook.Sheets(1).Cells(RowNum, 10).Value
        If BooleanValue = True Then
            ' Extract data from the Excel sheet
            SampleName = ThisWorkbook.Sheets(1).Cells(RowNum, 5).Value
            SampleType = ThisWorkbook.Sheets(1).Cells(RowNum, 11).Value
            ProcessingSetting = "GDA_v2"
            GDABeadChip = "GDA_" & ThisWorkbook.Sheets(1).Cells(RowNum, 1).Value
            PatientName = ThisWorkbook.Sheets(1).Cells(RowNum, 3).Value
            PatientId = ThisWorkbook.Sheets(1).Cells(RowNum, 4).Value
            Age = ThisWorkbook.Sheets(1).Cells(RowNum, 6).Value
            Indication = ThisWorkbook.Sheets(1).Cells(RowNum, 9).Value
            Doctor = ThisWorkbook.Sheets(1).Cells(RowNum, 8).Value
            DateTaken = ThisWorkbook.Sheets(1).Cells(RowNum, 7).Value
        
            ' Match Sample Name to file path
            PathFound = False
            If CsvFileMapping.Exists(SampleName) Then
                Set GtcDetailsFromCollection = CsvFileMapping(SampleName)
                ' Retrieve GtcFolder and Position
                GtcFolder = GtcDetailsFromCollection(1)  ' First item is GtcFolder
                Position = GtcDetailsFromCollection(2)   ' Second item is Position
                'MsgBox "Found for " & SampleName & " : " & GtcFolder & " " & Position
        
            ' Construct the expected file path
            ExpectedFilePath = SelectedFolder & "\" & GtcFolder & "\" & GtcFolder & "_" & Position & ".gtc"
            'MsgBox "Path " & ExpectedFilePath
            If FileSystem.FileExists(ExpectedFilePath) Then
                FilePath = ExpectedFilePath
                PathFound = True
            Else
                FilePath = "Fail puudub"
            End If
            Else
                MsgBox "Ei leidnud gtc failide seast proovi " & SampleName
                FilePath = "Fail puudub"
            End If
        
            ' Create the content for this row
            TxtContent = SampleName & vbTab & FilePath & vbTab & SampleType & vbTab & ProcessingSetting & vbTab & GDABeadChip & vbTab & PatientName & vbTab & PatientId & vbTab & Age & vbTab & Indication & vbTab & Doctor & vbTab & DateTaken
        
            ' Write the row to the text file
            Print #1, TxtContent
        End If
    Next RowNum

    ' Close the text file
    Close #1

    ' Notify the user that the process is complete
    MsgBox "Salvestasin VIA faili siia: " & vbNewLine & OutputFile & vbNewLine & vbNewLine & "Palun kontrolli fail üle enne kui VIA-sse laed! ", vbInformation
End Sub

' Helper function to get all .gtc files in a directory and its subdirectories
Sub GetGTCFiles(Folder As Object, FilePaths As Collection)
    Dim SubFolder As Object
    Dim File As Object

    ' Loop through each file in the folder
    For Each File In Folder.Files
        If Right(File.Name, 4) = ".gtc" Then
            FilePaths.Add File.Path
        End If
    Next File

    ' Loop through each subfolder in the folder
    For Each SubFolder In Folder.Subfolders
        Call GetGTCFiles(SubFolder, FilePaths)
    Next SubFolder
End Sub
